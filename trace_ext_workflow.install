 <?php

/**
 * Implements hook_schema().
 */
function trace_ext_workflow_schema() {
  $schema['trace_workflow_namespace_policies'] = array(
    'description' => 'Save policies for an entire namespace',
    'fields' => array(
      'namespace' => array(
    'description' => 'Namespace to which the policies are applied',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'submitted_policy' => array(
        'description' => 'Policy for an initially created item',
        'type' => 'text',
      ),
      'accepted_policy' => array(
        'description' => 'Policy for an item accepted by a manager',
        'type' => 'text',
      ),
      'published_policy' => array(
        'description' => 'Policy for an item published by a manager',
        'type' => 'text',
      ),
    ),
    'unique keys' => array(
      'unique_namespace_key' => array('namespace'),
    ),
    'primary key' => array('namespace'),
  );
  $schema['trace_workflow_pids'] = array(
    'description' => 'Keep track of the pids in the workflow',
    'fields' => array(
      'pid' => array(
        'description' => 'PID of the item that is in a workflow state. Either s (submitted) or a (accepted)',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The label of the fedora Object',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'state' => array(
        'description' => 'Either s (submitted) or a (accepted)',
        'type' => 'varchar',
        'length' => 1,
        'not null' => TRUE,
      ),
      'user' => array(
        'description' => 'who changed the record',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'modified_date' => array(
        'description' => 'This is the date and time when this was updated',
        'type' => 'varchar',
        'mysql_type' => 'TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP',
        'not null' => TRUE,
      ),
      'datastream' => array(
        'description' => 'Manually assigned time to trigger date update',
        'type' => 'varchar',
        'mysql_type' => 'DATETIME',
      ),
      'representative_body' => array(
        'description' => 'Either T (Thesis), D (Dissertation) or NULL (Unknown)',
        'type' => 'varchar',
        'length' => 1,
      ),
    ),
    'unique keys' => array(
      'unique_pid_key' => array('pid'),
    ),
    'primary key' => array('pid'),
  );

  $schema['trace_workflow_namespace_role'] = array(
    'description' => 'For a namespace, roles may approve objects',
    'fields' => array(
      'namespace' => array(
    'description' => 'namespace that is associated with a role id',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'rid' => array(
        'description' => 'Role Id from the role table that may approve/publish objects in namespace',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
  );
  return $schema;
}

/**
 * Add new columns date and database to trace_workflow_pids.
 */
function trace_ext_workflow_update_7002() {
  $table = 'trace_workflow_pids';

  $fields = array(
    'modified_date' => array(
      'description' => 'This is the date and time when this was updated',
      'type' => 'varchar',
      'mysql_type' => 'TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP',
      'not null' => TRUE,
    ),
    'datastream' => array(
      'description' => 'Manually assigned time to trigger date update',
      'type' => 'varchar',
      'mysql_type' => 'DATETIME',
    ),
  );

  foreach ($fields as $key => $field)  {
    if (!db_field_exists($table, $key)) {
      db_add_field($table, $key, $field);
    }
  }
  db_query("DELETE FROM {cache};");
}


function trace_ext_workflow_update_7006() {
  $table = 'trace_workflow_pids';

  $fields = array(
    'representative_body' => array(
      'description' => 'Either T (Thesis), D (Dissertation) or NULL (Unknown)',
      'type' => 'varchar',
      'length' => 1,
    ),
  );
  foreach ($fields as $key => $field)  {
    if (!db_field_exists($table, $key)) {
      db_add_field($table, $key, $field);
    }
  }
  db_query("DELETE FROM {cache};");
}

<?php

/**
 * Implements hook_menu().
 */
function trace_ext_workflow_menu() {
  $items = array();
  $items['trace_ext_workflow/list'] = array(
    'title' => 'Submitted Trace Objects',
    'description' => 'List of Submitted Objects.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('trace_ext_workflow_form'),
    'access arguments' => array('manage object properties'),
    'file' => 'includes/trace_ext_workflow_menu.inc',
  );
  return $items;
}

/**
 * Rules action callback; set a POLiCY datastream on an object and return.
 */
function trace_ext_workflow_rules_object_policy_add(AbstractObject $object) {
    module_load_include('inc', 'trace_ext_workflow', 'includes/trace_ext_workflow_dao');
    module_load_include('inc', 'trace_ext_workflow', 'includes/trace_ext_workflow_menu');
    module_load_include('inc', 'islandora', 'includes/utilities');
    return trace_ext_workflow_object_policy_add($object);
}

/**
 * Rules action callback; Confirm that the label of the DS does not change
 */
function trace_ext_workflow_rules_suppl_ds_update(IslandoraFedoraDatastream $datastream) {
    watchdog('trace_ext_workflow', '<pre>@print_r</pre>', array('@print_r' => print_r( $datastream, TRUE)), WATCHDOG_INFO);
    $getDSHistory = function (IslandoraFedoraDatastream  $datastream) { return $datastream->datastreamHistory; };

    $getDSHistory = Closure::bind($getDSHistory, null, $datastream);
    $dsHistoryArray = $getDSHistory( $datastream);
    $countDS = $datastream->count();
    $origin_label = $dsHistoryArray[$countDS -1]['dsLabel'];
    $new_label = $dsHistoryArray[0]['dsLabel'];
    if ($origin_label != $new_label) {
        $datastream->label = $origin_label;
        watchdog('trace_ext_workflow', '<pre>@label1 @label2</pre>', array('@label1' => $origin_label, '@label2' => $new_label ), WATCHDOG_INFO);
    }

    module_load_include('inc', 'trace_ext_workflow', 'includes/trace_ext_workflow_dao');
    module_load_include('inc', 'trace_ext_workflow', 'includes/trace_ext_workflow_menu');
    module_load_include('inc', 'islandora', 'includes/utilities');
    return $datastream;
}

/**
 * 
 * Implements simple_workflow_filter_select alter hook from islandora_simple_workflow.
 * workflow_manage_objects filters  the list of objects to be viewed in 
 * the workflow publication screen
 * 
 */
function trace_ext_workflow_simple_workflow_filter_select_alter(&$prev_inactive_objects) {
    module_load_include('inc', 'trace_ext_workflow', 'includes/trace_ext_workflow_dao');
    module_load_include('inc', 'trace_ext_workflow', 'includes/trace_ext_workflow_menu');
    module_load_include('inc', 'islandora', 'includes/utilities');
    $filtered_inactive_objects = array();
    while (sizeof($prev_inactive_objects) > 0) {
        $inactive_object = array_pop($prev_inactive_objects);
        $pid = $inactive_object['object']['value'];
        if (is_trace_workflow_object_accepted($pid) && can_trace_workflow_user_role_access_object($pid)) {
            array_push($filtered_inactive_objects, $inactive_object);
        }
    }
    $prev_inactive_objects =  $filtered_inactive_objects;
}

/**
 * 
 * Implements simple_workflow_extend_batch alter hook
 * Applies a new policy on the object if the object is in a particular state
 * 
 */
function trace_ext_workflow_simple_workflow_extend_batch_alter(&$target_object) {
    module_load_include('inc', 'trace_ext_workflow', 'includes/trace_ext_workflow_dao');
    module_load_include('inc', 'islandora', 'includes/utilities');

    trace_ext_workflow_object_update($target_object);
}